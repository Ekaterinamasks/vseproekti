
import telebot
from telebot import types

TOKEN = ""
bot=telebot.TeleBot(TOKEN)

num_1 =''
num_2 =''
symbol=''
result=None

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –Ω–∞—á–∞—Ç—å –≤—ã—á–µ—Å–ª–µ–Ω–∏—è")
    btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç,—É–º–µ—é –º–∞–ª–æ –Ω–æ —è –æ—á–µ–Ω—å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π,–º–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è".format(message.from_user), reply_markup=markup)
    
@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "üëã –Ω–∞—á–∞—Ç—å –≤—ã—á–µ—Å–ª–µ–Ω–∏—è"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        msg = bot.send_message(message.chat.id ,  "–≤–≤–µ–¥–∏ —á–∏—Å–ª–æ", reply_markup=markup)
        bot.register_next_step_handler(msg,proces_num1_step)
    elif(message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    
    elif(message.text == "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏?"):
        bot.send_message(message.chat.id, "—Ç–æ–≥–¥–∞ –∫–æ–≥–¥–∞ –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —Ä–∞–∑–±–µ—Ä—É—Ç—Å—è —Å —ç—Ç–æ–π —Ç–µ–º–æ–π...")
    
    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–≤—ã—á–∏–ª—Å—è—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏—è + - / * ** % ")
    
    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,row_width=1)
        button1 = types.KeyboardButton("üëã –Ω–∞—á–∞—Ç—å –≤—ã—á–µ—Å–ª–µ–Ω–∏—è")
        button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")
        return

@bot.message_handler(message='–Ω–∞—á–∞—Ç—å –≤—ã—á–µ—Å–ª–µ–Ω–∏—è')


def proces_num1_step(message,result=None):
    try:
        global num_1
     
        if result==None:
            num_1 = str(message.text) 
        else:
            num_1 = str(result)

        markup=types.ReplyKeyboardMarkup(resize_keyboard=True,row_width=4)
        itembtn1=types.KeyboardButton('+')
        itembtn2=types.KeyboardButton('-')
        itembtn3=types.KeyboardButton('*')
        itembtn4=types.KeyboardButton('/')
        itembtn5=types.KeyboardButton('**')
        itembtn6=types.KeyboardButton('%')

        markup.add(itembtn1,itembtn2,itembtn3,itembtn4,itembtn5,itembtn6)

        msg=bot.send_message(message.chat.id,"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é", reply_markup=markup)
        bot.register_next_step_handler(msg,proces_proc_step)
    except :
        bot.reply_to(message,'–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç.')
        return
    
# –≤—ã–±–æ–±—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏

def proces_proc_step(message):
    try:
        global symbol

        symbol = message.text
        markup = types.ReplyKeyboardRemove(selective=False)

        msg=bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –µ—â–µ —á–∏—Å–ª–æ", reply_markup=markup)
        bot.register_next_step_handler(msg, proces_num2_step)
    except :
        bot.reply_to(message,'–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç.')
        return
# –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–∞

def proces_num2_step(message):
    try:
        global num_2
        num_2=str(message.text)
     
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True,row_width=4)
        itembtn1=types.KeyboardButton('—Ä–µ–∑—É–ª—å—Ç–∞—Ç')
        itembtn2=types.KeyboardButton('–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
        markup.add(itembtn1,itembtn2)

        msg=bot.send_message(message.chat.id,"–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é", reply_markup=markup)
        bot.register_next_step_handler(msg,proces_alternativ_step)
    except Exception as e:
        bot.reply_to(message,'–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç.')
        return 

def proces_alternativ_step(message):    
    try:
        # –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
        calc()
        markup=types.ReplyKeyboardRemove(selective=False)

        if message.text.lower()=='—Ä–µ–∑—É–ª—å—Ç–∞—Ç':
            bot.send_message(message.chat.id, resultcalcPrint(), reply_markup=markup)
        elif message.text.lower()=='–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è':
            proces_num1_step(message,result)
    except Exception as e:
        bot.reply_to(f'{message} –ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç.')
        return


def resultcalcPrint():
    global num_1, num_2, symbol, result

    return "–ø–æ–ª—É—á–∏–ª–æ—Å—å: " + str(num_1) +' ' + symbol + ' ' + str(num_2) + '=' + str(result)

def calc():
    global num_1, num_2, symbol, result

    result = eval((num_1.replace(",",".")) + symbol + (num_2.replace(",",".")))

    return result

bot.enable_save_next_step_handlers(delay=2)
bot.load_next_step_handlers()

bot.polling()
